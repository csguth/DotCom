{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","to","href","path","Employment","Education","Music","Social","Home","target","mapping","x","roles","map","y","title","start","end","company","location","employment_data","education_data","social_data","name","bands_data","role","link","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.42a5714b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link> (<a href=\"mailto:csguth@gmail.com\">csguth &lt;at&gt; gmail &lt;dot&gt; com</a>)\n            </li>\n            <li>\n              <Link to=\"/employment\">Employment</Link>\n            </li>\n            <li>\n              <Link to=\"/education\">Education</Link>\n            </li>\n            <li>\n              <Link to=\"/music\">Music</Link>\n            </li>\n            <li>\n              <Link to=\"/social\">Social</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/employment\">\n            <Employment />\n          </Route>\n          <Route path=\"/education\">\n            <Education />\n          </Route>\n          <Route path=\"/music\">\n            <Music />\n          </Route>\n          <Route path=\"/social\">\n            <Social />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <section>\n      <h2>Home</h2>\n      <p>Hi,</p>\n      <p>My name is Chrystian Guth and I am a master in Computer Science. C++ is the programming language I'm most confortable of working with, however every now and then I challenge myself on trying new tools.</p>\n      <p>I currently live in <a href=\"https://goo.gl/maps/43V6QZXBvirCwfABA\" target=\"blank\">Florianópolis</a> but soon I'll be moving to <a href=\"https://goo.gl/maps/43V6QZXBvirCwfABA\">Eindhoven</a> to work for <a href=\"https://www.yer.com/\" target=\"blank\">YER</a>.</p>\n      <p>Besides Computer Science, I'm also interested in listening to and making music (electric guitar is my main instrument), playing online games and travelling.</p>\n      <p>Although you can reach me on any of my social network profiles, you'll certainly find me at GMail.</p>\n      <p>I'll try to keep this page updated. My resume can be downloaded <a href=\"resume.pdf\">in this link</a>.</p>\n    </section>\n  );\n}\n\nfunction mapping(x) {\n  let roles = x.roles.map(function(y){\n    return (\n      <li>\n        <p>{y.title}</p>\n        <p>{y.start} - {y.end}</p>\n      </li>\n    );\n  });\n  return (<li>\n    <p><strong>{x.company}</strong></p>\n    <p>{x.location}</p>\n    <ol>{roles}</ol>\n    </li>\n  );\n}\n\nfunction Employment() {\n  let employment_data = [\n    {\n      company: \"Communication Security Group (CSG)\",\n      location: \"Florianópolis - Brazil\",\n      roles: [\n        {\n          title:  \"Senior Software Engineer\",\n          start: \"May 2019\",\n          end: \"Jun 2020\"\n        },\n        {\n          title:  \"Software Engineer\",\n          start: \"Sep 2017\",\n          end: \"Apr 2019\"\n        }\n      ]\n    },\n    {\n      company: \"Cadence Design Systems\",\n      location: \"Cambridge - United Kingdom\",\n      roles: [\n        {\n          title: \"Software Engineering Intern\",\n          start: \"Jan 2017\",\n          end: \"Jun 2017\"\n        }\n      ]\n    },\n    {\n      company: \"Communication Security Group (CSG)\",\n      location: \"Florianópolis - Brazil\",\n      roles: [\n        {\n          title:  \"Software Engineer\",\n          start: \"Aug 2016\",\n          end: \"Dec 2016\"\n        }\n      ]\n    },\n    {\n      company: \"Universidade Federal de Santa Catarina\",\n      location: \"Florianópolis - Brazil\",\n      roles: [\n        {\n          title:  \"Researcher\",\n          start: \"Jul 2016\",\n          end: \"Feb 2016\"\n        },\n        {\n          title:  \"Researcher\",\n          start: \"Jan 2014\",\n          end: \"Dec 2015\"\n        },\n        {\n          title:  \"Research Assistant\",\n          start: \"Mar 2011\",\n          end: \"Dec 2013\"\n        }\n      ]\n    }\n  ].map(mapping);\n  return (\n    <section>\n      <h2>Employment</h2>\n      <ol>\n        {employment_data}\n      </ol>\n    </section>\n  );\n}\n\nfunction Education() {\n  let education_data = [\n    {\n      company: \"Universidade Federal de Santa Catarina (UFSC)\",\n      location: \"Florianópolis - Brazil\",\n      roles: [\n        {\n          title:  \"Ph.D. Computer Science\",\n          start: \"2017\",\n          end: \"2017 (Interrupted)\"\n        },\n        {\n          title:  \"M.Sc. Computer Science\",\n          start: \"2014\",\n          end: \"2016\"\n        },\n        {\n          title:  \"B.Sc. Computer Science\",\n          start: \"2010\",\n          end: \"2016\"\n        }\n      ]\n    }\n  ].map(mapping);\n  return (\n    <section>\n      <h2>Education</h2>\n      <ol>\n        {education_data}\n      </ol>  \n    </section>\n  );\n}\n\nfunction Social() {\n  let social_data = [\n    {\n      name: \"Linkedin\",\n      href: \"https://www.linkedin.com/in/csguth/\"\n    },\n    {\n      name: \"Github\",\n      href: \"https://github.com/csguth\"\n    },\n    {\n      name: \"Instagram\",\n      href: \"https://www.instagram.com/chrystianguth/\"\n    },\n    {\n      name: \"Steam\",\n      href: \"https://steamcommunity.com/id/csguth\"\n    }\n  ].map(function(x){\n    return <li><a href={x.href} target=\"blank\">{x.name}</a></li>\n  });\n  return (\n  <section>\n    <h2>Social</h2>\n    <ul>\n      {social_data}\n    </ul>\n  </section>\n  )\n}\n\nfunction Music() {\n  let bands_data = [\n    {\n      name: \"Bad News Bad News\",\n      role: \"Guitarist\",\n      start: \"2019\",\n      end: \"2020\",\n      link: \"https://g.co/kgs/YpgaUy\"\n    },\n    {\n      name: \"Hope of Fools\",\n      role: \"Guitarist\",\n      start: \"2013\",\n      end: \"2015\",\n      link: \"https://g.co/kgs/bFRS84\"\n    }\n  ].map(function(x){\n    return (\n      <li><a href={x.link} target=\"blank\">{x.name} - {x.role} ({x.start}-{x.end})</a></li>\n    );\n  });\n  return (\n    <section>\n      <h2>Music</h2>\n      <section>\n        <h3>Bands I was part of</h3>\n        <ol>\n          {bands_data}\n        </ol>\n      </section>\n    </section>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}