{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","to","href","path","Employment","Education","Music","Social","Home","target","mapping","x","roles","map","y","title","start","end","company","location","employment_data","education_data","social_data","name","bands_data","role","link","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8971c2e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link> (<a href=\"mailto:csguth@gmail.com\">csguth &lt;at&gt; gmail &lt;dot&gt; com</a>)\r\n            </li>\r\n            <li>\r\n              <Link to=\"/employment\">Employment</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/education\">Education</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/music\">Music</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/social\">Social</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/employment\">\r\n            <Employment />\r\n          </Route>\r\n          <Route path=\"/education\">\r\n            <Education />\r\n          </Route>\r\n          <Route path=\"/music\">\r\n            <Music />\r\n          </Route>\r\n          <Route path=\"/social\">\r\n            <Social />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <section>\r\n      <h2>Home</h2>\r\n      <p>Hello, World!</p>\r\n      <p>I am a Software developer based in <a href=\"https://goo.gl/maps/7PpQXmk1CwX2A2sn9\" target=\"_blank\">Eindhoven, NL</a>. Most of the time I use C++ and Python, but recently I have been flirting with Rust.</p>\r\n      <p>I am a Brazilian expat currently working full-time for Philips improving the Image Guided Therapy Devices products.</p>\r\n      <p>Besides Computer Science, I am also into making music, being the electric guitar my main instrument.</p>\r\n      <p>Although you can reach me on any of my social network profiles, you will certainly find me at GMail.</p>\r\n      <p>I will try to keep this page updated. My resume can be downloaded <a href=\"resume.pdf\">in this link</a>.</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapping(x) {\r\n  let roles = x.roles.map(function(y){\r\n    return (\r\n      <li>\r\n        <p>{y.title}</p>\r\n        <p>{y.start} - {y.end}</p>\r\n      </li>\r\n    );\r\n  });\r\n  return (<li>\r\n    <p><strong>{x.company}</strong></p>\r\n    <p>{x.location}</p>\r\n    <ol>{roles}</ol>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction Employment() {\r\n  let employment_data = [\r\n    {\r\n      company: \"Philips Image Guided Therapy Devices\",\r\n      location: \"Eindhoven - Netherlands\",\r\n      roles: [\r\n        {\r\n          title:  \"C++ Software Engineer\",\r\n          start: \"Oct 2020\",\r\n          end: \"Now\"\r\n        },\r\n        {\r\n          title:  \"Software Engineer\",\r\n          start: \"Sep 2017\",\r\n          end: \"Apr 2019\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      company: \"Communication Security Group (CSG)\",\r\n      location: \"Florian贸polis - Brazil\",\r\n      roles: [\r\n        {\r\n          title:  \"Senior Software Engineer\",\r\n          start: \"May 2019\",\r\n          end: \"Jun 2020\"\r\n        },\r\n        {\r\n          title:  \"Software Engineer\",\r\n          start: \"Sep 2017\",\r\n          end: \"Apr 2019\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      company: \"Cadence Design Systems\",\r\n      location: \"Cambridge - United Kingdom\",\r\n      roles: [\r\n        {\r\n          title: \"Software Engineering Intern\",\r\n          start: \"Jan 2017\",\r\n          end: \"Jun 2017\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      company: \"Communication Security Group (CSG)\",\r\n      location: \"Florian贸polis - Brazil\",\r\n      roles: [\r\n        {\r\n          title:  \"Software Engineer\",\r\n          start: \"Aug 2016\",\r\n          end: \"Dec 2016\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      company: \"Universidade Federal de Santa Catarina\",\r\n      location: \"Florian贸polis - Brazil\",\r\n      roles: [\r\n        {\r\n          title:  \"Researcher\",\r\n          start: \"Jul 2016\",\r\n          end: \"Feb 2016\"\r\n        },\r\n        {\r\n          title:  \"Researcher\",\r\n          start: \"Jan 2014\",\r\n          end: \"Dec 2015\"\r\n        },\r\n        {\r\n          title:  \"Research Assistant\",\r\n          start: \"Mar 2011\",\r\n          end: \"Dec 2013\"\r\n        }\r\n      ]\r\n    }\r\n  ].map(mapping);\r\n  return (\r\n    <section>\r\n      <h2>Employment</h2>\r\n      <ol>\r\n        {employment_data}\r\n      </ol>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction Education() {\r\n  let education_data = [\r\n    {\r\n      company: \"Universidade Federal de Santa Catarina (UFSC)\",\r\n      location: \"Florian贸polis - Brazil\",\r\n      roles: [\r\n        {\r\n          title:  \"M.Sc. Computer Science\",\r\n          start: \"2014\",\r\n          end: \"2016\"\r\n        },\r\n        {\r\n          title:  \"B.Sc. Computer Science\",\r\n          start: \"2010\",\r\n          end: \"2016\"\r\n        }\r\n      ]\r\n    }\r\n  ].map(mapping);\r\n  return (\r\n    <section>\r\n      <h2>Education</h2>\r\n      <ol>\r\n        {education_data}\r\n      </ol>  \r\n    </section>\r\n  );\r\n}\r\n\r\nfunction Social() {\r\n  let social_data = [\r\n    {\r\n      name: \"Linkedin\",\r\n      href: \"https://www.linkedin.com/in/csguth/\"\r\n    },\r\n    {\r\n      name: \"Github\",\r\n      href: \"https://github.com/csguth\"\r\n    },\r\n    {\r\n      name: \"Instagram\",\r\n      href: \"https://www.instagram.com/chrystianguth/\"\r\n    },\r\n    {\r\n      name: \"Steam\",\r\n      href: \"https://steamcommunity.com/id/csguth\"\r\n    }\r\n  ].map(function(x){\r\n    return <li><a href={x.href} target=\"blank\">{x.name}</a></li>\r\n  });\r\n  return (\r\n  <section>\r\n    <h2>Social</h2>\r\n    <ul>\r\n      {social_data}\r\n    </ul>\r\n  </section>\r\n  )\r\n}\r\n\r\nfunction Music() {\r\n  let bands_data = [\r\n    {\r\n      name: \"Bad News Bad News\",\r\n      role: \"Guitarist\",\r\n      start: \"2019\",\r\n      end: \"2020\",\r\n      link: \"https://g.co/kgs/YpgaUy\"\r\n    },\r\n    {\r\n      name: \"Hope of Fools\",\r\n      role: \"Guitarist\",\r\n      start: \"2013\",\r\n      end: \"2015\",\r\n      link: \"https://g.co/kgs/bFRS84\"\r\n    }\r\n  ].map(function(x){\r\n    return (\r\n      <li><a href={x.link} target=\"blank\">{x.name} - {x.role} ({x.start}-{x.end})</a></li>\r\n    );\r\n  });\r\n  return (\r\n    <section>\r\n      <h2>Music</h2>\r\n      <section>\r\n        <h3>Bands I was part of</h3>\r\n        <ol>\r\n          {bands_data}\r\n        </ol>\r\n      </section>\r\n    </section>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}